@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@using Fluxor
@using MuensterData.Domain.Traffic.Actions.Accidents
@using MuensterData.Domain.Traffic.States
@using Syncfusion.Blazor.Inputs

@inject IState<TrafficState> State
@inject IDispatcher Dispatcher

<div class="map-settings-background" @onclick="OnCloseMapSettings">
</div>
<div class="map-settings">
    <div class="d-flex">
        <h2>Karteneinstellungen</h2>
        <div class="ms-auto">
            <i class="bi bi-x-lg close-map-settings" @onclick="OnCloseMapSettings"></i>
        </div>
    </div>
    <div class="pt-2">
        <div class="map-settings-label">Marker-Transparenz</div>
        <div class="d-flex">
            <SfSlider Min="0.01" Max="1" Step="0.01" TValue="double" Value="State.Value.Accidents.MapSettings.MarkerOpacity"
                      ValueChanged="x => OnMapMarkerOpacityChanged(x)" Width="150px">
            </SfSlider>
            <div class="ms-2 map-marker-opacity-label">
                <span>@((State.Value.Accidents.MapSettings.MarkerOpacity * 100).ToString("#0"))</span>
                <span>%</span>
            </div>
        </div>
    </div>
</div>

@code
{
    private void OnMapMarkerOpacityChanged(double newValue)
    {
        Dispatcher.Dispatch(new MapMarkerOpacityChangedAction(newValue));
    }

    private void OnCloseMapSettings()
    {
        Dispatcher.Dispatch(new ToggleMapSettingsVisibilityAction());
    }
}
